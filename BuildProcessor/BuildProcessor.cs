// IncrementVersion.cs
using System.Text.Json;
using System.Text.Json.Nodes;

const string path = "../KSPLocalizer.version";
const string outputCsFilePath = "VersionInfo.cs"; // adjust as needed


if (!File.Exists(path))
{
    Console.Error.WriteLine("Version file not found: " + path);
    Console.Error.WriteLine("Current dir: " + Directory.GetCurrentDirectory());
    return;
}

string json = File.ReadAllText(path);
JsonNode root = JsonNode.Parse(json)!;

JsonNode version = root["VERSION"]!;

int major = version["MAJOR"]!.GetValue<int>();
int minor = version["MINOR"]!.GetValue<int>();
int patch = version["PATCH"]!.GetValue<int>();
int build = version["BUILD"]!.GetValue<int>() + 1;

version["BUILD"] = build;

File.WriteAllText(path, root.ToJsonString(new JsonSerializerOptions { WriteIndented = true }));


string fullVersion = $"{major}.{minor}.{patch}.{build}";

string generatedCode =
$@"// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a program
//     Do not modify this file manually.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace KSPLocalizer
{{
    public static class VersionInfo
    {{
        public const string FullVersion = ""{fullVersion}"";
        public const int Major = {major};
        public const int Minor = {minor};
        public const int Patch = {patch};
        public const int Build = {build};
    }}
}}";

//Directory.CreateDirectory(Path.GetDirectoryName(outputCsFilePath)!);
File.WriteAllText(outputCsFilePath, generatedCode);

Console.WriteLine($"Updated version: {fullVersion}");
